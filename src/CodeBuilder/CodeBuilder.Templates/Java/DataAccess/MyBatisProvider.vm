## 数据存储提供器类生成模板
##
## 参数:
## - ${package}
## - ${className}
## - ${entityClassPackage}
## - ${entityClass}
## - ${dataAccessInterface}
package ${package};

import ${entityClassPackage}.${entityClass};

/**
 *
 */
public interface ${dataAccessInterface} {
    
  // -------------------------------------------------------
  // 添加 删除 修改
  // -------------------------------------------------------

  /**
   * 添加记录
   *
   * @param record ${entityClass} 实例的详细信息
   */
  int insert(${entityClass} record);
  
  /**
   * 修改记录
   *
   * @param record ${entityClass} 实例的详细信息
   */
  int updateByPrimaryKey(${entityClass} param);
    
  /**
   * 删除记录
   *
   * @param id 标识
   */
  int deleteByPrimaryKey(string id);

  // -------------------------------------------------------
  // 查询
  // -------------------------------------------------------
    
  /**
   * 查询某条记录
   *
   * @param id 标识
   * @return 返回一个 ${entityClass} 实例的详细信息
   */
  ${entityClass} findOne(string id);
    
  /**
   * 查询所有相关记录
   *
   * @param params 查询参数集合
   * @return 返回所有 ${entityClass} 实例的详细信息
   */
  List<${entityClass}> findAll(Map params);
  
  // -------------------------------------------------------
  // 自定义功能
  // -------------------------------------------------------

  /**
   * 查询是否存在相关的记录
   *
   * @param id 标识
   * @return 布尔值
   */
  boolean isExist(string id);
}
